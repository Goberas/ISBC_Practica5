/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * HerramientaMarcado.java
 *
 * Created on 28-mar-2012, 20:39:42
 */

package GUI;

import java.util.ArrayList;
import java.util.Iterator;

import javax.swing.DefaultComboBoxModel;

import es.ucm.fdi.gaia.ontobridge.OntoBridge;
import es.ucm.fdi.gaia.ontobridge.OntologyDocument;

/**
 *
 * @author gobo
 */
public class HerramientaMarcado extends javax.swing.JFrame {

    /** Creates new form HerramientaMarcado */
    public HerramientaMarcado() {
        
        inicializaOntobridge();
        initComponents();
        arbol = new PnlConceptsAndInstancesTree(ob, false);
        pOnto.add(arbol);
        //pack();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lOpciones = new javax.swing.JLabel();
        pFoto = new javax.swing.JPanel();
        cAcciones = new javax.swing.JComboBox();
        cInstancias = new javax.swing.JComboBox();
        bMarcado = new javax.swing.JButton();
        pOnto = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lOpciones.setText("Opciones de Marcado");

        javax.swing.GroupLayout pFotoLayout = new javax.swing.GroupLayout(pFoto);
        pFoto.setLayout(pFotoLayout);
        pFotoLayout.setHorizontalGroup(
            pFotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 691, Short.MAX_VALUE)
        );
        pFotoLayout.setVerticalGroup(
            pFotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 516, Short.MAX_VALUE)
        );


        Iterator<String> acciones = ob.listProperties("Imagen");
        ArrayList<String> accionList = new ArrayList<String>();
        while(acciones.hasNext()){
        	accionList.add(ob.getShortName(acciones.next()));
        }
        
        cAcciones.setModel(new DefaultComboBoxModel(accionList.toArray()));
        cAcciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cAccionesActionPerformed(evt);
            }
        });
        cInstancias.setModel(new javax.swing.DefaultComboBoxModel());
        //cInstancias.enable(false);

        bMarcado.setText("Marcar");
        bMarcado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bMarcadoMouseClicked(evt);
            }
        });

        pOnto.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pOnto, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pFoto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lOpciones)
                        .addGap(18, 18, 18)
                        .addComponent(cAcciones, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cInstancias, 0, 208, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bMarcado)
                        .addGap(32, 32, 32))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lOpciones)
                    .addComponent(cAcciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cInstancias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bMarcado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pOnto, javax.swing.GroupLayout.DEFAULT_SIZE, 516, Short.MAX_VALUE)
                    .addComponent(pFoto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bMarcadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bMarcadoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_bMarcadoMouseClicked

    private void cAccionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cAccionesActionPerformed
        // TODO add your handling code here:
    	String accion = (String)cAcciones.getSelectedItem();

        Iterator<String> clases = ob.listPropertyRange(accion);
        ArrayList<String> instanciasList = new ArrayList<String>();
        if(clases.hasNext()){
        	// Solo tenemos en cuenta cuando solo hay una clase
        	Iterator<String> instancias = ob.listInstances(clases.next());
        	while(instancias.hasNext()){
        		instanciasList.add(ob.getShortName(instancias.next()));
        	}
        
        }
        cInstancias.setModel(new DefaultComboBoxModel(instanciasList.toArray()));
        cInstancias.setEnabled(true);
                
    }//GEN-LAST:event_cAccionesActionPerformed

    private void inicializaOntobridge(){
    	ob= new OntoBridge();
    	ob.initWithPelletReasoner();
    	
    	OntologyDocument actoresOnto= new OntologyDocument("http://www.owl-ontologies.com/Actores.owl", "file:doc/ontologia/Actores.owl");
    	ob.loadOntology(actoresOnto, new ArrayList<OntologyDocument>(), false);
    }
    
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HerramientaMarcado().setVisible(true);
            }
        });
    }

    private PnlConceptsAndInstancesTree arbol;
    private OntoBridge ob;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bMarcado;
    private javax.swing.JComboBox cAcciones;
    private javax.swing.JComboBox cInstancias;
    private javax.swing.JLabel lOpciones;
    private javax.swing.JPanel pFoto;
    private javax.swing.JPanel pOnto;
    // End of variables declaration//GEN-END:variables

}
